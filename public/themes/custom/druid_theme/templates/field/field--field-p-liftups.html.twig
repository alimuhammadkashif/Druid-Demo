{#
/**
 * @file
 * Theme override for a liftups.
 *
 * To override output, copy the "liftups.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all liftupss, you can also just override
 * theming for a subset of liftupss using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a liftups_foo liftups
 * on an article node type:
 * - liftups--node--liftups-foo--article.html.twig
 * - liftups--node--liftups-foo.html.twig
 * - liftups--node--article.html.twig
 * - liftups--liftups-foo.html.twig
 * - liftups--text-with-summary.html.twig
 * - liftups.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the liftups label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the liftups.
 * - multiple: TRUE if a liftups can contain multiple items.
 * - items: List of all the liftups items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The liftups item's content.
 * - entity_type: The entity type to which the liftups belongs.
 * - liftups_name: The name of the liftups.
 * - liftups_type: The type of the liftups.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_liftups()
 */
#}
{%
  set classes = [
    'liftups',
  ]
%}
{%
  set title_classes = [
    'liftups__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
    label_display == 'inline' ? 'liftups__label--' ~ label_display,
  ]
%}

{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass(classes, 'liftups__items') }}>
      {% for item in items %}
        <div{{ item.attributes.addClass('liftups__item') }}>{{ item.content }}</div>
      {% endfor %}
    </div>
  {% else %}
    {% for item in items %}
      <div{{ attributes.addClass(classes, 'liftups__item') }}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  {% for item in items %}
    <div{{ item.attributes.addClass('liftups__item') }}>{{ item.content }}</div>
  {% endfor %}
{% endif %}
