{#
/**
 * @file
 * Theme override for a offices.
 *
 * To override output, copy the "offices.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all officess, you can also just override
 * theming for a subset of officess using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a offices_foo offices
 * on an article node type:
 * - offices--node--offices-foo--article.html.twig
 * - offices--node--offices-foo.html.twig
 * - offices--node--article.html.twig
 * - offices--offices-foo.html.twig
 * - offices--text-with-summary.html.twig
 * - offices.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the offices label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the offices.
 * - multiple: TRUE if a offices can contain multiple items.
 * - items: List of all the offices items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The offices item's content.
 * - entity_type: The entity type to which the offices belongs.
 * - offices_name: The name of the offices.
 * - offices_type: The type of the offices.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_offices()
 */
#}
{%
  set title_classes = [
    'offices__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
    label_display == 'inline' ? 'offices__label--' ~ label_display,
  ]
%}

{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass(classes, 'offices__items') }}>
      {% for item in items %}
        <div{{ item.attributes.addClass('offices__item') }}>{{ item.content }}</div>
      {% endfor %}
    </div>
  {% else %}
    {% for item in items %}
      <div{{ attributes.addClass(classes, 'offices__item') }}>{{ item.content }}</div>
    {% endfor %}
  {% endif %}
{% else %}
  {% for item in items %}
    <div{{ item.attributes.addClass('offices__item') }}>{{ item.content }}</div>
  {% endfor %}
{% endif %}
