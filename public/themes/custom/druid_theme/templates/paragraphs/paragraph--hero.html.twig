{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set hero_title = content.field_p_title['#items'].getString() %}
{% set hero_text = content.field_p_text['#items'].getValue()[0]['value'] %}
{% set hero_link__url = content.field_p_link[0]['#url'] %}
{% set hero_link__title = content.field_p_link[0]['#title'] %}
{% set hero_video = content.field_p_video %}
{% set hero_image = content.field_p_image %}
{% set hero_slides = content.field_p_slide %}

{% if not hero_image and not hero_video['#items'] and not hero_slides['#items'] %}
  {% set hero_classes = ' hero--no-media hero--no-height' %}
{% elseif hero_video['#items'] %}
  {% set hero_classes = ' hero--has-video hero--no-height' %}
{% elseif hero_slides['#items']%}
  {% set hero_classes = ' hero--has-slide hero--no-height' %}
{% endif %}

<div class="hero{{ hero_classes }}">
  {% if not hero_slides['#items'] %}
    <div class="hero__media">
      {% if hero_image and not hero_slides['#items'] and not hero_video['#items'] %}
        <div class="hero__image">
          {{ hero_image }}
          <div class="hero__overlay"></div>
        </div>
      {% endif %}
      {% if hero_video and not hero_slides['#items'] %}
        {{ hero_video }}
      {% endif %}
    </div>
  {% endif %}

  <div class="hero__content{% if hero_slogan %} hero__content--has-slogan{% endif %} hero__content--spacing">
    {% if hero_icon %}
      <div class="hero__icon">{{ hero_icon }}</div>
    {% endif %}
    {% if hero_title %}
      <h1 class="hero__title">{{ hero_title }}</h1>
    {% endif %}
    {% if hero_slogan %}
      <div class="hero__slogan">{{ hero_slogan }}</div>
    {% endif %}

    {% if hero_text %}
      <div class="hero__text">{% autoescape false %}{{ hero_text }}{% endautoescape %}</div>
    {% endif %}

    {% if hero_link__url %}
      <a href="{{ hero_link__url }}" class="button button--with-arrow">
        {{ hero_link__title }}
        </a>
    {% endif %}
  </div>
</div>

{% if hero_slides['#items'] %}
  <div class="slider__container">
    <div class="slider">
      {{ hero_slides }}
    </div>
    <div class="slick-dots-wrapper"></div>
  </div>
{% endif %}
