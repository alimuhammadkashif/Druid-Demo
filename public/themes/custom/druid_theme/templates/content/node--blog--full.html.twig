{#
/**
 * @file
 * Bartik's theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{% set classes = [
  'node',
  'node--type-' ~ node.bundle|clean_class,
  node.bundle|clean_class ~ '-detail',
] %}

{% set title = node.get('title').getString() %}
{% set hero_title = title %}
{% set hero_image = content.field_header_background %}

<article{{ attributes.addClass(classes) }}>
  <div class="hero">
    {% if hero_image %}
      <div class="hero__media">
        <div class="hero__image">
          {{ hero_image }}
          <div class="hero__overlay"></div>
        </div>
      </div>
    {% endif %}
    <div class="hero__content">
      {% if hero_title %}
        <h1 class="hero__title">{{ hero_title }}</h1>
      {% endif %}
    </div>
  </div>
  {% if content.field_author|render %}
    <div class="blog-detail__content">
  {% else %}
    <div class="blog-detail__content blog-detail__content--no-author">
  {% endif %}
    {% if display_submitted %}

      {% if content.field_author|render %}
        <div class="blog-detail__date-author blog-date-author date-author">
          <div class="blog-date-author__image date-author__image">
            {{ content.field_author }}
          </div>
        </div>
        <div class="blog-date-container date-author l-container l-container--inset">
            <div class="blog-date-author__date date-author__date">
              {% trans %}
                {{ date }}
              {% endtrans %}
            </div>
            <div class="separator">|</div>
            <div class="blog-date-author__author date-author__author">
                {{ author_name }}
            </div>
          </div>
      {% else %}
        <div class="blog-detail__date-no-author blog-date-no-author date-author date-author--no-author l-container l-container--inset">
          <div class="blog-date-author__date date-author__date">
            {% trans %}
              {{ date }}
            {% endtrans %}
          </div>
        </div>
      {% endif %}
      {{ metadata }}
    {% endif %}
    <div{{ content_attributes.addClass('blog-detail__text') }}>
      <div class="l-container l-container--inset">
        {{ content|without('links', 'field_header_background', 'field_author', 'field_blog_attachment', 'field_blog_comments', 'field_druid') }}
      </div>

      {% if display_submitted %}
        {% include '@druid_theme/misc/social-share.html.twig' with {
          'modifier_class': 'blog-detail__social-share',
          'url': url,
          } only
        %}
      {% endif %}
    </div>

    {% if content.links %}
      <div class="blog-detail__add-comment">
        {{ content.links }}
      </div>
    {% endif %}

    {% if content.field_blog_attachment is not empty %}
      <div{{ attributes.setAttribute('id', 'attachments').addClass('node-readmore') }}>
        {{ attachment_link }}
      </div>
    {% endif %}
  </div>
  <div class="blog-detail__cta">
    <div class="l-container l-container--inset">
      <div class="blog-cta{% if content.field_druid|render %} blog-cta--has-sales{% endif %}">
        {% if CTA_block %}
          <div class="blog-cta__item blog-cta__item--cta">{{ CTA_block }}</div>
        {% endif %}
        {% if content.field_druid|render %}
          <div class="blog-cta__item blog-cta__item--sales">{{ content.field_druid }}</div>
        {% endif %}
      </div>
    </div>
  </div>
  {% if drupal_view('blog', 'other_posts') %}
    <div class="blog-detail__similar blog-detail__item--with-border">
      {{ drupal_view('blog', 'other_posts')  }}
    </div>
  {% endif %}
  {% if content.field_blog_comments %}
    <div class="blog-detail__comments blog-detail__item--with-border">{{ content.field_blog_comments }}</div>
  {% endif %}
</article>
